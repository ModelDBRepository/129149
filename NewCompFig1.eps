%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: NewCompPics.dvi
%%CreationDate: Fri Jul 16 10:41:22 2004
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 113 651 363 710
%%DocumentFonts: CMSS10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe -P pdf -t A4 -z NewCompPics
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2004.07.16:1041
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: hps.pro
%!
/HPSdict 20 dict dup begin/braindeaddistill 50 def/rfch{dup length 1 sub
1 exch getinterval}bind def/splituri{dup(#)search{exch pop}{()exch}
ifelse dup(file:)anchorsearch{pop exch pop 3 -1 roll pop false}{pop 3 -1
roll exch pop true}ifelse}bind def/lookuptarget{exch rfch dup
/TargetAnchors where{pop TargetAnchors dup 3 -1 roll known{exch get true
}{pop(target unknown:)print == false}ifelse}{pop pop
(target dictionary unknown\012)print false}ifelse}bind def/savecount 0
def/stackstopped{count counttomark sub/savecount exch store stopped
count savecount sub 1 sub dup 0 gt{{exch pop}repeat}{pop}ifelse}bind def
/tempstring 256 string def/targetvalidate{1 index dup length 255 gt exch
dup(/)search{pop pop pop exch pop true exch}{pop}ifelse cvn tempstring
cvs token pop pop length 0 ne or not}bind def/targetdump-hook where{pop}
{/targetdump-hook{dup mark exch gsave initmat setmatrix{{mark/Dest 4 2
roll targetvalidate{aload pop exch pop/Page 3 1 roll/View exch[exch
/FitH exch]/DEST pdfmark}{cleartomark}ifelse}forall}stackstopped pop
grestore}bind def}ifelse/baseurl{mark exch 1 dict dup 3 -1 roll/Base
exch put/URI exch/DOCVIEW{pdfmark}stackstopped pop}bind def
/externalhack systemdict/PDF known def/oldstyle true def/initmat matrix
currentmatrix def/actiondict 2 dict dup/Subtype/URI put def
/weblinkhandler{dup 3 1 roll mark 4 1 roll/Title 4 1 roll splituri 3 -1
roll dup length 0 gt{cvn/Dest exch 4 2 roll}{pop}ifelse{externalhack{
/HTTPFile exch}{actiondict dup 3 -1 roll/URI exch put/Action exch}
ifelse}{externalhack{/HTTPFile exch}{/File exch/Action/GoToR}ifelse}
ifelse counttomark 2 sub -1 roll aload pop/Rect 4 1 roll/Border 3 1 roll
/Color exch oldstyle{/LNK}{/Subtype/Link/ANN}ifelse gsave initmat
setmatrix{pdfmark}stackstopped grestore}bind def/externalhandler where{
pop}{/externalhandler{2 copy{weblinkhandler}exec{/externalhack
externalhack not store 2 copy{weblinkhandler}exec{/externalhack
externalhack not store/oldstyle false store 2 copy{weblinkhandler}exec{
(WARNING: external refs disabled\012)print/externalhandler{pop pop}bind
store externalhandler}{pop pop}ifelse}{pop pop/externalhack externalhack
not store}ifelse}{pop pop/externalhandler{weblinkhandler pop}bind store}
ifelse}bind def}ifelse/pdfmnew{dup type/stringtype eq{externalhandler}{
exch dup rfch exch 3 -1 roll lookuptarget{mark 4 1 roll/Title 4 1 roll
aload pop exch pop/Page 3 1 roll/View exch[exch/FitH exch]5 -1 roll
aload pop/Rect 4 1 roll/Border 3 1 roll/Color exch/LNK gsave initmat
setmatrix pdfmark grestore}{pop pop}ifelse}ifelse}bind def/pdfmold{dup
type/stringtype eq{externalhandler}{exch dup rfch exch 3 -1 roll
lookuptarget{mark 4 1 roll/Title 4 1 roll aload pop exch pop/Page 3 1
roll/View exch[exch/FitH exch]5 -1 roll aload pop pop 0 3 getinterval
/Rect 3 1 roll/Border exch/LNK gsave initmat setmatrix pdfmark grestore}
{pop pop}ifelse}ifelse}bind def/pdfm where{pop}{/pdfm
/currentdistillerparams where{pop currentdistillerparams dup
/CoreDistVersion known{/CoreDistVersion get}{0}ifelse dup
braindeaddistill le{(WARNING: switching to old pdfm because version =)
print ==/pdfmold}{pop/pdfmnew}ifelse load}{/pdfmark where{pop{dup type
/stringtype eq{externalhandler}{2 copy mark 3 1 roll{pdfmnew}
stackstopped{2 copy mark 3 1 roll{pdfmold}stackstopped{
(WARNING: pdfm disabled\012)print/pdfm{pop pop}store}{
(WARNING: new pdfm failed, switching to old pdfm\012)print/pdfm/pdfmold
load store}ifelse}{/pdfm/pdfmnew load store}ifelse pop pop}ifelse}}{{
pop pop}}ifelse}ifelse bind def}ifelse end def

%%EndProcSet
%%BeginFont: CMSS10
%!PS-AdobeFont-1.1: CMSS10 1.0
%%CreationDate: 1991 Aug 20 17:33:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 77 /M put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 114 /r put
readonly def
/FontBBox{-61 -250 999 759}readonly def
/UniqueID 5000803 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BDCEEA888D07B439DBD4E8B4C9
D198C03874B5E6F8FBF4922065A92BC3E66D05DE53971CB1424510E892442858
D69CE1F76E4DA76C87C763A4B2FE36321E54B1328C9155B8ED6361855A151723
3386AEA3D042B8D89C8C0E9A33E5DF3B466F7BB8C2C8A4ED4CDAFF55FC6D3EE6
0AF2CEBFC1AC3A6E6692F8BB81F82D86BAE85016AD62FCB05467082C2E5AD348
44D1439C2B59F65590E57CA0DE481A7A34E79931B1513C4C30156170409A4BB8
46D412D1DAF88AD30722F12DBCA1CCC6B4BCC28D06B0D29149DDEC520C8FBA13
6B82E2E1790F00B216282FF122EF0D47B70A1B29514DDF7C0435ED238C14BDF5
6DA243117FBEF7398F97EB95597707ED63C6797EBA1B46EA19ABB1DABDA171B3
16CD500F5D64CBFBE4F9CBC3E66A34427D3C4D0C432710289381F9BFD91B4FF4
1E3A896C3EEA2F3105C218877D6C0C6B763760FA364D00065E1CAE9DCB5676ED
286A9ED0D1C946DCA6A2A670EE0936FB4706CC62E234CFEED34AA615C48D2872
A087F30990C85E64BA68F3D5C117123467DB411C9F2D6F6858CC70C1E352C477
713097321B4C4FD4C5CDE305415F998E7245908EEDE6E056A736EA77BD8C639C
3A79FFD0B74B3D28F0494A115F2841CF8A8827AB5608F96FD8998A5F40FB3DFE
3AA0C7696DE4E1D18DC0D6E84B943175FC38FFC42A9C0CBB13A908978C98BFE5
034F88480F32B9DEB2FD228FF6CB0B89B045AB02020C82E3F5716DC640613185
9F597CE262729BC52132F43922B9E28BB71A30AC8709634561B22D13C4FAFE0A
12C4451969226B220038AD8DDA990A4E2CAD53DBEAB698898BBD3046234EB4EA
901287E71CB41296C431383AB85F18882F65BE36923F6C0FD6FAD1834E7C49A3
915F0967CAD843D98F5EDA7F953ACA3F04CFB576E48B49A7472E2C57171136DC
83B7B3D9F99952A1C1378A94CE4688D00A969A6CC7FCAF478B009BCE55177A9C
2AAC1554F038DCED727CF61762209574A4CB9E97056980163AD7F561230B6976
CE6FEB164B3B7AD529644F33A794C431424583687EDD1C7FE6B6978FBABF1891
F9F859F1EBC44656392B4AEA123ED740FF684F4F0B3916B2244BEDF10803D0BF
63E2523BDDA3E80712556520BE32447F299380A812364ED9E04DFFBCFD4ECBC8
5F5548F1A9EAC379CCB88A2A90A2C916E14EA2883C4492F1AC94EE80410EB08F
C990FCF94FBF2A0C6C8852CF6CDDCA291AAF1DA754381FD324C9148B494AB8A4
B1E6BABE6D70C0298051CC06AEE78F4E8E6029C9C310644F68FFD0B0FADD7DCF
EF755E32790EFE792C58CAF232D05508E292AC4280BDB6CAAED89D083DD8D5B9
258F5AD4DDA4BB6757B62D2F2C8BCBD5C4785166DEE3EDBD64BBC06E3C6E07D5
7D7F65722FD56CDC5EAED518CFBB59746F3E51228B6B47729E283D72C600B390
A3F48D85A4107A70726E712562999A9B7C4B37C56480C6D43AC8CEA8ABE43D8B
922C1F69CFA0184854F1973BAF8A4DF3DA222A2C998D59B354904ECC3A229F58
5FB0FDE30E8DC431D23EA9E554E6848EECB071197320E30A6866FFFEFA85A4FA
4CC8E8B4A476A7594B05BF09D9B0951E4114139E7C07E99C765063F9C06307C3
86988DE1D9FEC3727819200C0EB0D21D7E2DBBA555DCB6B4A74E9660B39EB99C
301D4B97BDF6905856E307A1430023F3D87625D1A06FDF739414588A85A9413E
68E52A3FB88DADDBA091B8DD9F20C86B24AF0C99666C0A2B4A8EFDE06F2BDF79
6F81755B2413CF6A8E1D6E36E0435B26D462492E9CD3E7330FEFC1E4247508B9
FCC3B26A8B79F1169B5DCE5BD7C1530EFDBB85921514F7E702E119255AA266C5
459313B08845FA8492B0C7F4E1CF38C900D0C713D40858748D13CF0E3987CF0F
B4C983312F2E58A7E0CD20D3581C74D7D98286F449B35FDCD36D378DAF4C6E60
2F59FFBE66302C20CAF67B64BCD380814D9C5D9ECD7CF96862BFBD687B3F51FA
BA1A831034C33241720142E624E5FEF15554ECE788EF61773042764F95CE5966
DE1602D71B34A489DB00FEBB8CD2C2E4282EB395D4184E1D9EB2CA95DD153615
7AA02D5BE51EBFA09E5F26117C5339DF38642A406A1728242423557B828F6859
DBA001EE57281ADAB2645BBA0B5588A44E30117FB4DB6DCC39DE7108D30F58C5
E83B10F4DA3A4D718E3ED7D0EF1018F4A241570E1D19DDDC0270EFAA4363
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 8000 8000 (NewCompPics.dvi)
@start /Fa 141[414 3[626 963 7[539 2[626 582 19[1061
77[{}7 1212.12 /CMSS10 rf
%DVIPSBitmapFont: Fb mfpic 128 1
/Fb 1 2 8000 600 dfs[<A1A10503C5C5C5C5B40903C5C5C5C5B4FCA1A1050FA1A1A1A1
01C0080FA1A1A1A113C0A1A14DA1A1A1A16D50A1A1A1A17FA1A14DA1A1A1A16D50A1A1A1
A17FA1A14DA1A1A1A152A1A1A1A17FA1A194C5C5C5C5B57EA1A1A1A1A1A19FC5C5C5C5B5
7EA1A1A1A1A1A185A3A1A1A1A1A1A161A1A1A1A1A1A17CA1A1A1A15BA1A171A1A1A1A15B
A1A171A1A1A1A176A1A1A1A15BA1A171A1A1A1A14974A1A1A1A15BA1A171A1A1A1A14974
A1A1A1A15BA1A10503A1A1A1A190CE0003A1A1A1A190D7D7CBFCA1A194D7D7D801FED7D7
D7D7CED801FED7D7D7D7CBFCB3AB263FFFFC92B700F00203B700E00207B76C021FC5C5BA
00F0093FC5C5C5C500F0093FC5C5BA00E00207B76C021FB600FE037FB600F84AB512F048
6D4A7052704AA1A159A1A1A1A152A1A152704A6F92B76C17F8B6734A704A4FA1A17398C5
C5C5C5B46C98C5C5BB6C4A4F70724A14FCA46C494F6E4C6E73A1A1A1A1A1A1A1A1A1A148
6E7393C84C6E14F86C496E4C764C6EA1A1A1A1A1A1A1A1A1A16F4C6E4B6F4B17F0D7D7D7
D700079AD7D7D7D600079AD7D7D7D7C6FCA9A1A1A1A1DC0F81D907C0A1A1A1A1DE0F81EB
07C0A1A1A1A1DC1FC1011FA1A1A1A1DF1FC1EB1FE0A1A1A1A1DC3FE1496CA1A1A1A1DE3F
E1133FA1A1A1A105F1017FA1A1A1A108F1137FA1A1A1A105F901FFA1A1A1A108F913FFA1
A1A1A105FDB5A1A1A1A108FDB5FCA1A1A1A170B648A1A1A1A172B6FCA1A1A1A170A1A1A1
A1765DA1A1A1A17092C8A1A1A1A17092C8FCA1A1A1A1704AA1A1A1A1735CA1A1A1A1704A
A1A1A1A1735CA1A1A1A1704AA1A1A1A1735CA1A1A1A17149A1A1A1A1745BA1A1A1A171A1
A1A1A188A1A1A1A14FA1A1A1A164A1A1A1A17149A1A1A1A1745BA2A1A1A1A17149A1A1A1
A1745BA2A1A1A1A171A1A1A1A188A1A1A1A196C9A1A1A1A196C9FCA2A1A1A1A171A1A1A1
A188A1A1A1A160A1A1A1A1A1A1A1A16BA2A1A1A1A1A1A1A1A12201A1A1A1A11701A4A1A1
A1A14EA1A1A1A1755AA1A1A1A17148A1A1A1A11C78A1A1A1A195CAA1A1A1A195CAFCB3B3
B3B3A3A1A1A1A106FCA1A1A1A11CFCA1A1A1A10501A1A1A1A11C01A1A1A1A172A1A1A1A1
88A4A1A1A1A11703A1A1A1A1A1A1A1A12203A2A1A1A1A1A1A1A1A18FA1A1A1A184A1A1A1
A14DA1A1A1A164A1A1A1A1A1A1A1A1A17EA1A1A1A185A1A1A1A14DA1A1A1A164A1A1A1A1
A1A1A1A1A17EA1A1A1A14D6DA1A1A1A162A1A1A1A1A1A1A1A1A17EA1A1A1A14D6DA1A1A1
A162A1A1A1A173A1A1A1A188A1A1A1A14DA1A1A1A1527FA1A1A1A194B56CA1A1A1A197B5
7EA1A1A1A14C6EA1A1A1A161A1A1A1A14C6EA1A1A1A14F14FFA1A1A1A14C6EA1A1A1A14F
81A1A1A1A14C03C0A1A1A1A14E81A1A1A1A14C6FA1A1A1A14E81A1A1A1A1DC3FFDA1A1A1
A198383FFDFEA1A1A1A1DDF9FEA1A1A1A11BF9A1A1A1A105F1017FA1A1A1A108F1137FA1
A1A1A105E1013FA1A1A1A108E1131FA1A1A1A1DC1FC16D48A1A1A1A1DE1FC1130FA1A1A1
A1DC0F01D90780A1A1A1A1DE0F01EB0780A1A1A1A1040091C9A1A1A1A1040091C9FCA826
3FFFFC92B700F00203B700E00207B76C021FC5C5BA9AC5C5C5C59AC5C5BA00E00207B76C
021FB600FE037FB600F84AB512F0486D4A7052704AA1A1A1A1A1A1A1A1A1A14B704A6F92
B76C17F8B6734A704A4FA1A1A1A1A1A1A1A1A1A16C4A4F70724A14FCA46C494F6E4C6E73
A1A14F75A1A1A1A14875A1A14F6E7393C84C6E14F86C496E4C764C6EA1A17DA1A1A1A176
A1A1764C6E4B6F4B17F0D7D7D7D7CA95D7D7D7D7CA95D7D7D7D7C7FCB3ABA1A10503C5C5
C5C5B40903C5C5C5C5B4FCA1A1050FA1A1A1A101C0080FA1A1A1A113C0A1A14DA1A1A1A1
6D50A1A1A1A17FA1A14DA1A1A1A16D50A1A1A1A17FA1A14DA1A1A1A152A1A1A1A17FA1A1
94C5C5C5C5B57EA1A1A1A1A1A19FC5C5C5C5B57EA1A1A1A1A1A185A3A1A1A1A1A1A161A1
A1A1A1A1A17CA1A1A1A15BA1A171A1A1A1A15BA1A171A1A1A1A176A1A1A1A15BA1A171A1
A1A1A14974A1A1A1A15BA1A171A1A1A1A14974A1A1A1A15BA1A10503A1A1A1A190CE0003
A1A1A1A190D7D7CBFC>1918 266 132 468 27680 1 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
HPSdict begin
/TargetAnchors
0 dict dup begin
end targetdump-hook def end
TeXDict begin
%%EndSetup
%%Page: 1 1
TeXDict begin HPSdict begin 1 0 bop 5978 13062 a Fb(\001)11622
8081 y Fa(Memb)-34 b(rane)3539 b(Memb)-34 b(rane)p eop
end end
%%Trailer

end

userdict /end-hook known{end-hook}if
%%EOF
